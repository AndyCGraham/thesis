// Setting the parameters for the run - can change via command line
params {
	threads_med = 2 // Number of cpus for compute-medium processes 
	threads_high = 10 // Number of cpus for compute-heavy processes 
	GPUenabled = true // Whether to use GPUs for cellbender if using cluster profile
	GPUs = 2 // Number of GPUs to use for cellbender if using cluster profile and GPUenabled = true
	time = "48:00:00" // Time to give each task 
	GEXreadPairs = "data/multiome/GEX/fastqs/*/*_S{1,2,3,4}_L00{1,2}_R{1,2}*.fastq.gz" // Wildcard path to GEX fastq pairs
	ATACreadPairs = "data/multiome/ATAC/fastqs/*/*_S{1,2,3,4}_L00{1,2}_R{1,2}*.fastq.gz" // Wildcard path to ATAC fastq pairs
	Ref = "resources/optimised_refdata-cellranger-arc-mm10-2020-A-2.0.0/" // Location of cellranger compatibile reference
	outdir = "processedData/Multiome/" // Output directory
}

profiles {

    docker {
    
    	process {
    		executor = 'local'
		
		// Give extra memory to hungry tasks
		withName:CellRangerARC {
			memory = 200.GB 
		}
		withName:CellBender {
			memory = 200.GB
			
		}
		withName:FastQC {
			memory = 50.GB
		}
		withName:FastQCATAC {
			memory = 50.GB 
		}
	    
	}
    
        docker {
		enabled = true
		autoMounts = true
    	}
    	
    }

    singularity {
    
	    process {
		    
		    executor = 'slurm'
		    memory = '200GB'
		    maxRetries = 3
		    queueSize = 20
		    
		    // Give extra memory to hungry tasks
		    withName:CellRangerARC {
			memory = 200.GB 
			clusterOptions = { "-p cpu -t $params.time" }
		    }
		    withName:CellBender {
			memory = 200.GB
			containerOptions = { params.GPUenabled == true ? "--nv --env CUDA_VISIBLE_DEVICES=$CUDA_VISIBLE_DEVICES": null  }
			clusterOptions = { params.GPUenabled == true ? "-p gpu -t $params.time --gres=gpu:$params.GPUs": "-p cpu -t $params.time" } 
		    }
		    withName:FastQC {
			memory = 50.GB
			clusterOptions = { "-p cpu -t $params.time" }
		    }
		    withName:FastQCATAC {
			memory = 50.GB 
			clusterOptions = { "-p cpu -t $params.time" }
		    }
		    
	    }
		    
		singularity {
			    enabled = true
			    autoMounts = true
		}
	    
    }

}

//Write a report
report {
	enabled = true
	file = params.outdir + "/pipelineReports/pipeline_report.html"
	overwrite = true
}

//Write a timeline showing how long each process takes
timeline {
	enabled = true
	file = params.outdir + "/pipelineReports/pipeline_timeline.html"
	overwrite = true
}

//Write a flowchart showing how the data is processed
dag {
	enabled = true
	file = params.outdir + "/pipelineReports/pipeline_dag.html"
	overwrite = true
}
